% Copyright 2011, Kenny Erleben
clear all;
close all;
clc;

addpath('../fem');
addpath('../cor');
addpath('../fvm');
addpath('../meshing');

addpath('./pressure');

method = fem_method();

pressures = [-0.5, 1.0] .* 1e5;
for p = 1:length(pressures)
    pressure = pressures(p);
    inflation = 0.0;
    % Create the scene for the simulation
    scene = pressure_create_scene(1, '../', 'uniform_sphere.mat', 1.0, pressure, inflation);
    % Find the triangles of the inner surface
    F = [];
    load(scene.meshfile); % T, X, Y, Z
    T = double(T);
    origin = [0, 0, 0];
    radius = 9.5;
    ns = [];
    for t = 1:length(T(:, 1))
        % Find all triangles that satisfies some constraint
        i = T(t, 1);
        j = T(t, 2);
        k = T(t, 3);
        m = T(t, 4);
        
        triangles = ...
             [j, m, k; ...
              i, k, m; ...
              j, k, i; ...
              j, i, m ...
             ];
         
        for tri = 1:length(triangles(:, 1))
           triangle = triangles(tri, :);
           p1 = [X(triangle(1)), Y(triangle(1)), Z(triangle(1))];
           p2 = [X(triangle(2)), Y(triangle(2)), Z(triangle(2))];
           p3 = [X(triangle(3)), Y(triangle(3)), Z(triangle(3))];
           % Check if this triangle is part of the surface of the
           % air-chamber
           ns = [ns; norm(p1)];
           if norm(p1) < radius && norm(p2) < radius && norm(p3) < radius
               % Direction from (0,0,0 to p) == p
               p = mean([p1; p2; p3]);
               % Norrmal of triangle p1,p2,p3
               u = p2 - p1;
               v = p3 - p1;
               n = [u(2) * v(3) - u(3) * v(2); ...
                    u(3) * v(1) - u(1) * v(3); ...
                    u(1) * v(2) - u(2) * v(1)  ...
                   ];
               if dot(n, p) < 0
                F = [F; triangle];
               end
           end
        end
    end
    scene.F = F;
    scene.create_pressure_forces
    % Create the parameters for 'ecoflex-00-50' silicone, and use an adaptive
    % step in the simulation
    params = create_params('ecoflex-00-50','adaptive', 0.0, 0.001, false, true, 1.0, 0.0, false); 
    params.E = 5e4;
    %params.rho = 1070 / (0.2642e9 / params.E);
    % Make directory if it doesn't exist
    outputFolder = strcat('exp_pressure_uniform/output/exp_pressure_uniform_beta=', string(pressure), '/');
    if ~exist(outputFolder, 'dir')
       mkdir(outputFolder)
    end
    resultFolder = strcat('exp_pressure_uniform/results/');
    if ~exist(resultFolder, 'dir')
       mkdir(resultFolder)
    end
    % Create profile info
    pinfo  = create_profile_info();
    pinfo.output_path = outputFolder;
    % Data generated by the simulation
    pdata = simulate( params, method, scene, pinfo); 
    save(strcat('exp_pressure_uniform/results/exp_pressure_uniform_beta=', string(pressure), '_pdata.mat'), 'pdata');
    save(strcat('exp_pressure_uniform/results/exp_pressure_uniform_beta=', string(pressure), '_pinfo.mat'), 'pinfo');
end
